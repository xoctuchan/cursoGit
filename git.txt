GIT
	Registro de cambios
	comparar versiones
	recuperar versiones
	permite que una o varias personas desarrollen cambios

Version
	Mercurial
	Subversion (SVN)
	GIT
	Team Fundation Server

Velocidad
diseño sencillo
Miles de ramas paralelas
completamente distribuido
capaz de manejar proyectos grandes

Caracteristicas de GIT
	Rapidez en la gestion d ramas
	Aislamiento de ramas
	Ggestion distribuida no centralizada
	Gestion eficiente en proyectos grandes (Pull request y forking - autorización para incluir cambios)
	Realmacenamiento periodico en paquetes
	Compatibilidad con protocolos (HTTPS, SSH)
	Open Source
	Solución prácticamente gratuita para equipos pequeños
	Compatible con todas las herramientas de integración continua modernas


SCM (Sistemas de control de versiones) tradicionales

Tres estados de GIT
	Confirmado (Commited)
		Almacenado 
	Modificado (Modified)
	Preparadao (Staged)
	Sin seguimiento (Untracked)

1. Obtner ultima version
2. Agregar o quitar archivos
3. Preparación de archivos
4. Confirmación a travez de un commit
5. Push, se sincroniza con el servidor 

Implementaciones de Git
	GitHub
	GitLab
	Bitbucket
	Codding

Repositorio
	Carpeta donde se ubican los archivos

Commit
	Fotografia de como estan los archivos, cuenta huella criptografica unica

Branch
	Serie de commits consecutivos, siempre apunta al commit más reciente


git config --global user.name "nombreapellido"


* ir a carpeta Vacia 
* click derecho GIT Bash here

git status
git add git.txt
git commit -m "primer commit"
git branch
git branch --all
git fetch 	(Descargar de master a una rama)
git pull    (Descargar de master y hace merge )
git push    (Subir cambios)


GUI GIT CLIENT
	GitKraken
	SourceTree
	GitHub Desktop
	


git init
git status
git add git.txt
git commit -m "Primer commit"
git remote show
git remote remove <name>
git remote add origin https://github.com/xoctuchan/cursoGit.git
git push -u origin master

git log
git show e2408ae5892522d222315ab65e2cee21dbdaf095